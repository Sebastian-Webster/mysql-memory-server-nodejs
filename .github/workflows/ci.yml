name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  ci-node-win:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
        # We only support Node.js 16.6.0 and newer
        node-version: [16.6.0, 16.x, 17.0.0, 17.x, 18.x, 19.x, 20.x, 21.x, 22.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install packages
        run: npm ci

      - name: Run tests
        run: npm run test:ci --colors

      - name: Upload mysqlmsn directory
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.5
        with:
          name: CI-${{ matrix.os }}-node-${{ matrix.node-version }}
          path: "C:\\Users\\RUNNER~1\\mysqlmsn"
          compression-level: 9

  ci-node-unix:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, macos-15, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
        # We only support Node.js 16.6.0 and newer
        node-version: [16.6.0, 16.x, 17.0.0, 17.x, 18.x, 19.x, 20.x, 21.x, 22.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install packages
        run: npm ci

      - name: Run tests
        run: npm run test:ci --colors

      - name: Upload mysqlmsn directory
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.5
        with:
          name: CI-${{ matrix.os }}-node-${{ matrix.node-version }}
          path: /tmp/mysqlmsn
          compression-level: 9

  ci-bun-win:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
        bun-version: [1.1.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install packages
        run: bun install

      - name: Run tests
        run: bun run test:ci --colors

      - name: Upload mysqlmsn directory
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.5
        with:
          name: CI-${{ matrix.os }}-bun-${{ matrix.bun-version }}
          path: "C:\\Users\\RUNNER~1\\mysqlmsn"
          compression-level: 9

  ci-bun-unix:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, macos-15, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
        bun-version: [1.0.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install packages
        run: bun install

      - name: Run tests
        run: bun run test:ci --colors

      - name: Upload mysqlmsn directory
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.5
        with:
          name: CI-${{ matrix.os }}-bun-${{ matrix.bun-version }}
          path: /tmp/mysqlmsn
          compression-level: 9

  test-node-win:
    runs-on: ${{ matrix.os }}
    needs: ci-node-win

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install packages
        run: npm ci

      - name: Run tests
        run: npm test --colors

  test-node-unix:
    runs-on: ${{ matrix.os }}
    needs: ci-node-unix

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, macos-15, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install packages
        run: npm ci

      - name: Run tests
        run: npm test --colors

  test-bun-win:
    runs-on: ${{ matrix.os }}
    needs: ci-bun-win

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun 1.1.0
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.0

      - name: Install packages
        run: bun install

      - name: Run tests
        run: bun run test --colors

  test-bun-unix:
    runs-on: ${{ matrix.os }}
    needs: ci-bun-unix

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, macos-15, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun 1.0.0
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.0.0

      - name: Install packages
        run: bun install

      - name: Run tests
        run: bun run test --colors

  stress-node-win:
    runs-on: ${{ matrix.os }}
    needs: test-node-win

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install packages
        run: npm ci

      - name: Run tests
        run: npm run stress --colors

      - name: Upload mysqlmsn directory
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.5
        with:
          name: StressTests-${{ matrix.os }}-node
          path: "C:\\Users\\RUNNER~1\\mysqlmsn"
          compression-level: 9

  stress-node-unix:
    runs-on: ${{ matrix.os }}
    needs: test-node-unix

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, macos-15, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        if: ${{ runner.os == 'Linux' }}
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      - name: Free Disk Space (macOS)
        if: ${{ runner.os == 'macOS' }}
        working-directory: /Applications
        run: |
          echo 'BEFORE CLEANUP:'
          df -h
          sudo find . -name Xcode\*.app -delete
          sudo rm -rf /Users/runner/Library/Android
          echo 'AFTER CLEANUP:'
          df -h

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install packages
        run: npm ci

      - name: Run tests
        run: npm run stress --colors

      - name: Upload mysqlmsn directory
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.5
        with:
          name: StressTests${{ matrix.os }}-node
          path: |
            /tmp/mysqlmsn
            !/temp/mysqlmsn/dbs/*/*.sock
          compression-level: 9

  stress-bun-win:
    runs-on: ${{ matrix.os }}
    needs: test-bun-win

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
        bun-version: [1.1.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install packages
        run: bun install

      - name: Run tests
        run: bun run stress --colors

      - name: Upload mysqlmsn directory
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.5
        with:
          name: StressTests-${{ matrix.os }}-bun-${{ matrix.bun-version }}
          path: "C:\\Users\\RUNNER~1\\mysqlmsn"
          compression-level: 9

  stress-bun-unix:
    runs-on: ${{ matrix.os }}
    needs: test-bun-unix

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, macos-15, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
        bun-version: [1.0.0]

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        if: ${{ runner.os == 'Linux' }}
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      - name: Free Disk Space (macOS)
        if: ${{ runner.os == 'macOS' }}
        working-directory: /Applications
        run: |
          echo 'BEFORE CLEANUP:'
          df -h
          sudo find . -name Xcode\*.app -delete
          sudo rm -rf /Users/runner/Library/Android
          echo 'AFTER CLEANUP:'
          df -h

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install packages
        run: bun install

      - name: Run tests
        run: bun run stress --colors

      - name: Upload test databases
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.5
        with:
          name: StressTests-${{ matrix.os }}-bun
          path: |
            /tmp/mysqlmsn
            !/temp/mysqlmsn/dbs/*/*.sock
          compression-level: 9

  fedora:
    runs-on: ubuntu-latest
    container:
      image: fedora:40
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        run: sudo dnf install nodejs -y

      - name: Install required libraries
        run: sudo dnf install libaio numactl -y

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --colors